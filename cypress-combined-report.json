{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 5,
    "pending": 0,
    "failures": 2,
    "start": "2021-04-03T10:57:22.414Z",
    "end": "2021-04-03T10:57:36.897Z",
    "duration": 11896,
    "testsRegistered": 7,
    "passPercent": 71.42857142857143,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0ffdff1f-fb6e-4931-8b1d-9d1684b8cb65",
      "title": "",
      "fullFile": "cypress\\integration\\cucumberTest\\todos.feature",
      "file": "cypress\\integration\\cucumberTest\\todos.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4dbb43a8-b169-4ceb-882e-9c66a78d3bb5",
          "title": "As a user of to do list web app, I want to test create, update, complete and delete functionality.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login the webapp to create the tasks with different inputs (example #1)",
              "fullTitle": "As a user of to do list web app, I want to test create, update, complete and delete functionality. Login the webapp to create the tasks with different inputs (example #1)",
              "timedOut": null,
              "duration": 1459,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8045799e-bb36-4ac0-a855-9a61a63e33e4",
              "parentUUID": "4dbb43a8-b169-4ceb-882e-9c66a78d3bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login the webapp to create the tasks with different inputs (example #2)",
              "fullTitle": "As a user of to do list web app, I want to test create, update, complete and delete functionality. Login the webapp to create the tasks with different inputs (example #2)",
              "timedOut": null,
              "duration": 611,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "02c5de79-d48d-450f-a813-373756b0a37d",
              "parentUUID": "4dbb43a8-b169-4ceb-882e-9c66a78d3bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login the webapp to create the tasks with different inputs (example #3)",
              "fullTitle": "As a user of to do list web app, I want to test create, update, complete and delete functionality. Login the webapp to create the tasks with different inputs (example #3)",
              "timedOut": null,
              "duration": 574,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ecbd643c-d879-4a45-bfc0-bd8fee55725d",
              "parentUUID": "4dbb43a8-b169-4ceb-882e-9c66a78d3bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login the webapp to create the tasks with different inputs (example #4)",
              "fullTitle": "As a user of to do list web app, I want to test create, update, complete and delete functionality. Login the webapp to create the tasks with different inputs (example #4)",
              "timedOut": null,
              "duration": 567,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7a043a3c-ae64-436d-8e77-5a153a07cddf",
              "parentUUID": "4dbb43a8-b169-4ceb-882e-9c66a78d3bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login the webapp then test postive scenarios create , update , complete & delete tasks.",
              "fullTitle": "As a user of to do list web app, I want to test create, update, complete and delete functionality. Login the webapp then test postive scenarios create , update , complete & delete tasks.",
              "timedOut": null,
              "duration": 1527,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "63d19979-d9dc-46ab-9a45-b61200e930ae",
              "parentUUID": "4dbb43a8-b169-4ceb-882e-9c66a78d3bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login the webapp then test negative scenarios as part of this webapp",
              "fullTitle": "As a user of to do list web app, I want to test create, update, complete and delete functionality. Login the webapp then test negative scenarios as part of this webapp",
              "timedOut": null,
              "duration": 5993,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'NotAva' within the selector: '.todo-list li' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'NotAva' within the selector: '.todo-list li' but never did.\n    at Context.eval (https://todomvc.com/__cypress/tests?p=cypress\\integration\\cucumberTest\\todos.feature:70:6)\n    at Context.resolveAndRunStepDefinition (https://todomvc.com/__cypress/tests?p=cypress\\integration\\cucumberTest\\todos.feature:10458:9)\n    at Context.eval (https://todomvc.com/__cypress/tests?p=cypress\\integration\\cucumberTest\\todos.feature:9801:35)",
                "diff": null
              },
              "uuid": "fb30971f-e8e3-4a07-a062-769d9211fe8d",
              "parentUUID": "4dbb43a8-b169-4ceb-882e-9c66a78d3bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login the webapp to test the negative scenario",
              "fullTitle": "As a user of to do list web app, I want to test create, update, complete and delete functionality. Login the webapp to test the negative scenario",
              "timedOut": null,
              "duration": 1165,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "CypressError: `cy.click()` can only be called on a single element. Your subject contained 2 elements. Pass `{ multiple: true }` if you want to serially click each element.\n\nhttps://on.cypress.io/click",
                "estack": "CypressError: `cy.click()` can only be called on a single element. Your subject contained 2 elements. Pass `{ multiple: true }` if you want to serially click each element.\n\nhttps://on.cypress.io/click\n    at mouseAction (https://todomvc.com/__cypress/runner/cypress_runner.js:153308:17)\n    at Context.click (https://todomvc.com/__cypress/runner/cypress_runner.js:153482:14)\n    at Context.<anonymous> (https://todomvc.com/__cypress/runner/cypress_runner.js:171546:21)\nFrom Your Spec Code:\n    at Context.eval (https://todomvc.com/__cypress/tests?p=cypress\\integration\\cucumberTest\\todos.feature:73:22)\n    at Context.resolveAndRunStepDefinition (https://todomvc.com/__cypress/tests?p=cypress\\integration\\cucumberTest\\todos.feature:10458:9)\n    at Context.eval (https://todomvc.com/__cypress/tests?p=cypress\\integration\\cucumberTest\\todos.feature:9801:35)",
                "diff": null
              },
              "uuid": "58bf8b48-a95b-469f-b9a0-517472df4b13",
              "parentUUID": "4dbb43a8-b169-4ceb-882e-9c66a78d3bb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8045799e-bb36-4ac0-a855-9a61a63e33e4",
            "02c5de79-d48d-450f-a813-373756b0a37d",
            "ecbd643c-d879-4a45-bfc0-bd8fee55725d",
            "7a043a3c-ae64-436d-8e77-5a153a07cddf",
            "63d19979-d9dc-46ab-9a45-b61200e930ae"
          ],
          "failures": [
            "fb30971f-e8e3-4a07-a062-769d9211fe8d",
            "58bf8b48-a95b-469f-b9a0-517472df4b13"
          ],
          "pending": [],
          "skipped": [],
          "duration": 11896,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}