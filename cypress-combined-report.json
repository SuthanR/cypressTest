{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 5,
    "pending": 0,
    "failures": 3,
    "start": "2021-04-03T11:53:54.513Z",
    "end": "2021-04-03T11:54:13.529Z",
    "duration": 16588,
    "testsRegistered": 8,
    "passPercent": 62.5,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cd598f05-7684-4fe5-860e-d9f4149f1931",
      "title": "",
      "fullFile": "cypress\\integration\\cucumberTest\\todos.feature",
      "file": "cypress\\integration\\cucumberTest\\todos.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2e5d7d78-13e8-4817-85a7-32a9f2f3cf4d",
          "title": "As a user of to do list web app, I want to test create, update, complete and delete functionality.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login the webapp to create the tasks with different inputs (example #1)",
              "fullTitle": "As a user of to do list web app, I want to test create, update, complete and delete functionality. Login the webapp to create the tasks with different inputs (example #1)",
              "timedOut": null,
              "duration": 1101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ea0538a6-036b-4b10-afc0-b4b2ca48211d",
              "parentUUID": "2e5d7d78-13e8-4817-85a7-32a9f2f3cf4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login the webapp to create the tasks with different inputs (example #2)",
              "fullTitle": "As a user of to do list web app, I want to test create, update, complete and delete functionality. Login the webapp to create the tasks with different inputs (example #2)",
              "timedOut": null,
              "duration": 617,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c5a3a113-a27e-41ed-ab0a-c3e168434e6d",
              "parentUUID": "2e5d7d78-13e8-4817-85a7-32a9f2f3cf4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login the webapp to create the tasks with different inputs (example #3)",
              "fullTitle": "As a user of to do list web app, I want to test create, update, complete and delete functionality. Login the webapp to create the tasks with different inputs (example #3)",
              "timedOut": null,
              "duration": 616,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ae3165be-13ec-423b-97e2-fcba0177b185",
              "parentUUID": "2e5d7d78-13e8-4817-85a7-32a9f2f3cf4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login the webapp to create the tasks with different inputs (example #4)",
              "fullTitle": "As a user of to do list web app, I want to test create, update, complete and delete functionality. Login the webapp to create the tasks with different inputs (example #4)",
              "timedOut": null,
              "duration": 562,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0b57f6a6-ab6c-4c11-96d5-4cb77a24f504",
              "parentUUID": "2e5d7d78-13e8-4817-85a7-32a9f2f3cf4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login the webapp then test postive scenarios create , update , complete & delete tasks.",
              "fullTitle": "As a user of to do list web app, I want to test create, update, complete and delete functionality. Login the webapp then test postive scenarios create , update , complete & delete tasks.",
              "timedOut": null,
              "duration": 1481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6118f4c0-efce-44e6-b529-a6266a20ff31",
              "parentUUID": "2e5d7d78-13e8-4817-85a7-32a9f2f3cf4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login the webapp then test negative scenarios as part of this webapp",
              "fullTitle": "As a user of to do list web app, I want to test create, update, complete and delete functionality. Login the webapp then test negative scenarios as part of this webapp",
              "timedOut": null,
              "duration": 5917,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'NotAva' within the selector: '.todo-list li' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'NotAva' within the selector: '.todo-list li' but never did.\n    at Context.eval (https://todomvc.com/__cypress/tests?p=cypress\\integration\\cucumberTest\\todos.feature:70:6)\n    at Context.resolveAndRunStepDefinition (https://todomvc.com/__cypress/tests?p=cypress\\integration\\cucumberTest\\todos.feature:10462:9)\n    at Context.eval (https://todomvc.com/__cypress/tests?p=cypress\\integration\\cucumberTest\\todos.feature:9805:35)",
                "diff": null
              },
              "uuid": "18a7190f-18e3-4fc9-9eda-40f5b670d5ed",
              "parentUUID": "2e5d7d78-13e8-4817-85a7-32a9f2f3cf4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login the webapp to test the negative scenario",
              "fullTitle": "As a user of to do list web app, I want to test create, update, complete and delete functionality. Login the webapp to test the negative scenario",
              "timedOut": null,
              "duration": 1410,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "CypressError: `cy.click()` can only be called on a single element. Your subject contained 2 elements. Pass `{ multiple: true }` if you want to serially click each element.\n\nhttps://on.cypress.io/click",
                "estack": "CypressError: `cy.click()` can only be called on a single element. Your subject contained 2 elements. Pass `{ multiple: true }` if you want to serially click each element.\n\nhttps://on.cypress.io/click\n    at mouseAction (https://todomvc.com/__cypress/runner/cypress_runner.js:153308:17)\n    at Context.click (https://todomvc.com/__cypress/runner/cypress_runner.js:153482:14)\n    at Context.<anonymous> (https://todomvc.com/__cypress/runner/cypress_runner.js:171546:21)\nFrom Your Spec Code:\n    at Context.eval (https://todomvc.com/__cypress/tests?p=cypress\\integration\\cucumberTest\\todos.feature:73:22)\n    at Context.resolveAndRunStepDefinition (https://todomvc.com/__cypress/tests?p=cypress\\integration\\cucumberTest\\todos.feature:10462:9)\n    at Context.eval (https://todomvc.com/__cypress/tests?p=cypress\\integration\\cucumberTest\\todos.feature:9805:35)",
                "diff": null
              },
              "uuid": "9989511c-059c-4a2b-bc40-82c08be8c84b",
              "parentUUID": "2e5d7d78-13e8-4817-85a7-32a9f2f3cf4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login the webapp to test the another negative scenario",
              "fullTitle": "As a user of to do list web app, I want to test create, update, complete and delete functionality. Login the webapp to test the another negative scenario",
              "timedOut": null,
              "duration": 4884,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.edit`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.edit`, but never found it.\n    at Context.eval (https://todomvc.com/__cypress/tests?p=cypress\\integration\\cucumberTest\\todos.feature:77:6)\n    at Context.resolveAndRunStepDefinition (https://todomvc.com/__cypress/tests?p=cypress\\integration\\cucumberTest\\todos.feature:10462:9)\n    at Context.eval (https://todomvc.com/__cypress/tests?p=cypress\\integration\\cucumberTest\\todos.feature:9805:35)",
                "diff": null
              },
              "uuid": "15c462a8-5ac1-4c76-b700-fe214ab75958",
              "parentUUID": "2e5d7d78-13e8-4817-85a7-32a9f2f3cf4d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea0538a6-036b-4b10-afc0-b4b2ca48211d",
            "c5a3a113-a27e-41ed-ab0a-c3e168434e6d",
            "ae3165be-13ec-423b-97e2-fcba0177b185",
            "0b57f6a6-ab6c-4c11-96d5-4cb77a24f504",
            "6118f4c0-efce-44e6-b529-a6266a20ff31"
          ],
          "failures": [
            "18a7190f-18e3-4fc9-9eda-40f5b670d5ed",
            "9989511c-059c-4a2b-bc40-82c08be8c84b",
            "15c462a8-5ac1-4c76-b700-fe214ab75958"
          ],
          "pending": [],
          "skipped": [],
          "duration": 16588,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}